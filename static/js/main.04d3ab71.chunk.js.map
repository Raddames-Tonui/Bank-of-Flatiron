{"version":3,"sources":["components/Transaction.js","components/TransactionsList.js","components/Search.js","components/AddTransactionForm.js","components/AccountContainer.js","components/App.js","index.js"],"names":["Transaction","date","description","category","amount","TransactionsList","transactions","className","map","transaction","id","Search","onSearch","useState","searchTerm","setSearchTerm","type","placeholder","value","onChange","event","term","target","AddTransactionForm","onAddTransaction","formData","setFormData","handleChange","key","onSubmit","preventDefault","fetch","method","headers","body","JSON","stringify","then","response","ok","alert","json","data","catch","error","console","name","required","step","AccountContainer","setTransactions","filteredTransactions","setFilteredTransactions","useEffect","filtered","filter","toLowerCase","includes","newTransaction","App","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.04d3ab71.chunk.js","sourcesContent":["import React from \"react\";\n\n\nfunction Transaction({ date, description, category, amount }) {\n  return (\n    <tr>\n      <td>{date}</td>\n      <td>{description}</td>\n      <td>{category}</td>\n      <td>{amount}</td>\n    </tr>\n  );\n}\n\nexport default Transaction;\n","import Transaction from \"./Transaction\";\n\nfunction TransactionsList({transactions}) {\n\n  return (\n    <table className=\"ui celled striped padded table\">\n      <tbody>\n        <tr>\n          <th>\n            <h3 className=\"ui center aligned header\">Date</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Description</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Category</h3>\n          </th>\n          <th>\n            <h3 className=\"ui center aligned header\">Amount</h3>\n          </th>\n        </tr>\n\n        {transactions.map((transaction) => (\n         <Transaction key={transaction.id} date={transaction.date}  description={transaction.description} category={transaction.category} amount={transaction.amount}/>\n        ))}\n      </tbody>\n    </table>\n  );\n}\n\nexport default TransactionsList;\n","import React, { useState } from \"react\";\n\nfunction Search({ onSearch }) {\n  const [searchTerm, setSearchTerm] = useState(\"\");\n\n  const handleSearch = (event) => {\n    const term = event.target.value;\n    setSearchTerm(term);\n    onSearch(term); // Pass the search term back to the parent component\n  };\n\n  return (\n    <div className=\"ui large fluid icon input\">\n      <input\n        type=\"text\"\n        placeholder=\"Search your Recent Transactions\"\n        value={searchTerm}\n        onChange={handleSearch}\n      />\n      <i className=\"circular search link icon\"></i>\n    </div>\n  );\n}\n\nexport default Search;\n","import React, { useState } from \"react\";\n\nfunction AddTransactionForm({onAddTransaction}) {\n\n  const [formData, setFormData] = useState({\n    date: \"\",\n    description: \"\",\n    category: \"\",\n    amount: \"\",\n  });\n\n  function handleSubmit(event) {\n    event.preventDefault();\n    \n    // Send form data to backend server\n\n    fetch(\"https://bank-of-flatiron-amrl.onrender.com/transactions\",{\n      method : \"POST\",\n      headers : {\"Content-Type\" : \"application/json\"},\n      body : JSON.stringify(formData),\n    })\n      .then((response) => {\n        if (!response.ok) {\n          alert(\"Failed to add transaction\");\n        }\n        return response.json();\n      })\n      .then((data) => {\n        onAddTransaction(data)\n        alert(\"Transaction added successfully:\", data);\n        //  Resetting the form after successful submission\n        setFormData({\n          date: \"\",\n          description: \"\",\n          category: \"\",\n          amount: \"\",\n        \n        });\n      })\n      .catch((error) => {\n        console.error(\"Error adding transaction:\", error);\n      });\n  }\n\n  function handleChange(event) {\n    const key = event.target.id;\n    setFormData({\n      ...formData,\n      [key]: event.target.value,\n    });\n  }\n\n  return (\n    <div className=\"ui segment\">\n      <form className=\"ui form\" onSubmit={handleSubmit}>\n        <div className=\"inline fields\">\n          <input\n            id=\"date\"\n            type=\"date\"\n            name=\"date\"\n            value={formData.date}\n            onChange={handleChange}\n            required\n          />\n          <input\n            id=\"description\"\n            type=\"text\"\n            name=\"description\"\n            placeholder=\"Description\"\n            value={formData.description}\n            onChange={handleChange}\n            required\n          />\n          <input\n            id=\"category\"\n            type=\"text\"\n            name=\"category\"\n            placeholder=\"Category\"\n            value={formData.category}\n            onChange={handleChange}\n            required\n          />\n          <input\n            id=\"amount\"\n            type=\"number\"\n            name=\"amount\"\n            placeholder=\"Amount\"\n            step=\"0.01\"\n            value={formData.amount}\n            onChange={handleChange}\n            required\n          />\n        </div>\n        <button className=\"ui button\" type=\"submit\">\n             Add Transaction\n        </button>\n      </form>\n    </div>\n  );\n}\n\nexport default AddTransactionForm;\n","import React, { useState, useEffect } from \"react\";\nimport TransactionsList from \"./TransactionsList\";\nimport Search from \"./Search\";\nimport AddTransactionForm from \"./AddTransactionForm\";\n\nfunction AccountContainer() {\n  const [transactions, setTransactions] = useState([]);\n  const [filteredTransactions, setFilteredTransactions] = useState([]);\n\n  useEffect(() => {\n    fetch(\"https://bank-of-flatiron-amrl.onrender.com/transactions\")\n      .then((response) => response.json())\n      .then((data) => {\n        setTransactions(data);\n        setFilteredTransactions(data); // Initially set filtered transactions to all transactions\n      });\n  }, []);\n\n  // Function to filter transactions based on search term\n  const handleSearch = (searchTerm) => {\n    const filtered = transactions.filter((transaction) =>\n      transaction.description.toLowerCase().includes(searchTerm.toLowerCase())\n    );\n    setFilteredTransactions(filtered);\n  };\n\n  // Function to add a new transaction\n  const addTransaction = (newTransaction) => {\n    setTransactions([...transactions, newTransaction]);\n  };\n\n  return (\n    <div>\n      <Search onSearch={handleSearch} />\n      <AddTransactionForm onAddTransaction={addTransaction} />\n      <TransactionsList transactions={filteredTransactions} />\n    </div>\n  );\n}\n\nexport default AccountContainer;\n","import React from \"react\";\nimport AccountContainer from \"./AccountContainer\";\n\n\n\nfunction App() {\n  \n  return (\n    <div className=\"ui raised segment\">\n      <div className=\"ui segment violet inverted\">\n        <h2>The Royal Bank of Flatiron</h2>\n      </div>\n      <AccountContainer />\n    </div>\n  );\n}\n\nexport default App;","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./components/App\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\nimport \"./main.css\"\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}